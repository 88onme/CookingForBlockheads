buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "1"
def MAVEN_REPO = System.getenv("MAVEN_REPO") ?: ""
def MAVEN_USERNAME = System.getenv("MAVEN_USERNAME") ?: ""
def MAVEN_PASSWORD = System.getenv("MAVEN_PASSWORD") ?: ""

version = "2.0." + BUILD_NUMBER
group = "net.blay09.mods"
archivesBaseName = "CookingForBlockheads"

minecraft {
    version = "1.8.9-11.15.1.1855"
    runDir = "run"
    
    mappings = "stable_20"
}

repositories {
    maven {
        name = "AppleCore"
        url = "http://www.ryanliptak.com/maven/"
    }
    maven {
        name = "RX14"
        url = "http://mvn.rx14.co.uk/repo/"
    }
    ivy {
        name "MineTweaker"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module](-[classifier])-[revision].[ext]"
    }
    ivy {
        name = "InventoryTweaks"
        artifactPattern "http://addons-origin.cursecdn.com/files/2287/489/[module]-[revision].jar"
    }
}

configurations {
    provided
}

sourceSets.main.compileClasspath += [configurations.provided]

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

dependencies {
    deobfCompile "applecore:AppleCore:1.8.9-1.3.0+166.beb36:api"
    provided name: "MineTweaker3", version: "1.8-3.0.10B", classifier: "Dev", ext: "jar"
    provided group: "inventorytweaks", name: "InventoryTweaks", version: "1.59-dev-3"
}

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.api.output
    appendix "mc" + minecraft.version
}

sourceJar {
    appendix "mc" + minecraft.version
}

task jarJavadoc(type: Jar, dependsOn: 'javadoc') {
    from "build/docs/javadoc"
    classifier "javadoc"

    appendix "mc" + minecraft.version
}

task jarAPI(type: Jar) {
    from sourceSets.api.output

    classifier "api"
    appendix "mc" + minecraft.version
}

task jarDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.api.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier "dev"
    appendix "mc" + minecraft.version
}

artifacts {
    archives jarAPI
    archives jarDev
    archives jarJavadoc
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
            }

            pom.withXml {
                asNode().dependencies.dependency.findAll {
                    it.scope.text() == "compile"
                }.each {
                    if(it.optional)
                        it.optional.value = 'true'
                    else
                        it.appendNode('optional', 'true');
                }
            }
        }
    }
}
